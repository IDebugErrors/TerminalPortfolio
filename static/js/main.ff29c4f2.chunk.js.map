{"version":3,"sources":["utils/turnDraggable.js","text/textManager.js","text/contentEN.js","text/contentPT.js","Components/Languages/Languages.js","Components/TopBar/buttonsFunction.js","Components/TopBar/TopBar.js","Components/Cursor/Cursor.js","Components/TextTyped/TextTyped.js","Components/SectionBar/SectionBar.js","utils/languages.js","Components/TerminalOutput/TerminalOutput.js","Components/Terminal/Terminal.js","index.js"],"names":["turnDraggable","Component","objectSentToDraggableLibrary","useEffect","Draggable","portfolioTextWithTwoLanguages","languages","defaultLanguage","getSectionContent","section","actualLanguage","getSectionName","changeLanguage","language","isValid","Error","supportedLanguages","includes","getSectionNames","contentInAEspecificLanguage","Object","keys","this","rel","target","href","isValidLanguage","convertLanguageInStringToElement","className","Languages","allLanguagesComponent","map","ButtonStates","getNextElement","list","index","length","addDisplayPropertyToElement","element","property","style","display","changeTextColor","color","colorObj","nextElement","nextIndex","nextTextColors","changeBackgroundColors","backgroundColor","nextBackgroundColors","Button","props","onClick","String","len","TopBar","id","document","querySelector","title","Cursor","setCursorStatus","is_on","setState","cursorOnStatus","opacity","changeCursorState","state","componentDidMount","interval","setInterval","timeToUpdate","componentWillUnmount","clearInterval","cursorChar","React","TextTyped","checkIfLeftCharToBeShowed","Boolean","charsToBeShowed","showOneChar","head","tail","newText","textInsideTerminalText","showACharIfIsMissingACharToBeShown","timeToWaitBetweenEachChar","totalTime","text","split","SectionBar","window","addEventListener","renderSection","renderedSection","sectionName","sections","setLanguageFromQueryParamOrBrowserLanguage","languageFromUrl","URLSearchParams","location","search","get","languageFromBrowser","navigator","TerminalOutput","setTimeout","changeSection","updateSectionNameAndClearContent","updateSectionContent","timeToWaitTheCommadIsTyped","sectionContent","updateSectionName","time","textTyped","promptString","ref","TerminalDraggable","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ff29c4f2.chunk.js","sourcesContent":["import {useEffect} from 'react'\nimport Draggable from 'draggable_dialog'\n\n\nconst turnDraggable = (Component, objectSentToDraggableLibrary) => {\n  return ( () => {\n    useEffect( () =>\n      new Draggable(objectSentToDraggableLibrary)\n    )\n    return <Component/>\n  })\n}\n\n\nexport default turnDraggable\n","import contentEN from './contentEN.js'\nimport contentPT from './contentPT.js'\n\n\nconst defaultLanguage = \"en\"\nconst languages = {\n  \"en\" : contentEN,\n  \"pt\" : contentPT\n}\n\n\nclass TextManager {\n  constructor(languages, defaultLanguage) {\n    this.languages = languages\n    this.supportedLanguages = Object.keys(languages)\n    this.actualLanguage = defaultLanguage\n  }\n\n\n  getSectionContent = section => {\n    return this.languages[this.actualLanguage][section][\"content\"]\n  }\n\n\n  getSectionName = section => {\n    return this.languages[this.actualLanguage][section][\"name\"]\n  }\n\n\n  changeLanguage = language => {\n    if (this.isValid(language)) {\n      this.actualLanguage = language\n    } else {\n      throw new Error(\"Unsuported language: \" + language )\n    }\n  }\n\n\n  isValid = language => this.supportedLanguages.includes(language)\n\n\n  getSectionNames = () => {\n    let contentInAEspecificLanguage = this.languages[this.actualLanguage]\n    let sectionNames = Object.keys(contentInAEspecificLanguage)\n    return sectionNames\n  }\n}\n\n\nconst portfolioTextWithTwoLanguages = \n  new TextManager(languages, defaultLanguage)\n\n\nconst getSectionContent = portfolioTextWithTwoLanguages.getSectionContent\n\n\nconst getSectionName = portfolioTextWithTwoLanguages.getSectionName\n\n\nconst getSectionNames = portfolioTextWithTwoLanguages.getSectionNames\n\n\nconst changeLanguage = portfolioTextWithTwoLanguages.changeLanguage\n\n\nconst isValidLanguage = portfolioTextWithTwoLanguages.isValid\n\n\nconst supportedLanguages = portfolioTextWithTwoLanguages.supportedLanguages\n\n\nexport {\n  getSectionName, \n  getSectionNames, \n  getSectionContent, \n  supportedLanguages,\n  changeLanguage, \n  isValidLanguage\n}\n\n\n","//jaypatel (jaypatel@programmer.net)\n//jaypatel (jaypatel@programmer.net)\n//jaypatel (jaypatel@programmer.net)\n//jaypatel (jaypatel@programmer.net)\n//jaypatel (jaypatel@programmer.net)\n//jaypatel (jaypatel@programmer.net)\n\n\nvar contentEN = {\n  \"aboutme\" : {\n    \"name\" : \"About me\",\n    \"content\" : \n<>\n<p>\nHello 👋, I'm <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/IDebugErrors\">@JayPatel</a>,<br/>\nSelf Driven-Self Motivated Student Constantly Experimenting with new and old-school technologies. Areas of work : Software Engineering \\ Cloud Computing . I like to program, I like to research and implement software design techniques, learn how to structure projects, and how to write elegant code.\n</p>\n<p>\nMoreover, I like to study programming languages, functional programming, clean code, and talk about AI, open-source, PC Hardware and tech in general. \n</p>\n<p>\nI have developed personal projects in which I work with web apps, APIs, bots, and databases. I used concepts of functional programming, object-oriented programming, REST API, and image processing.\nMy main focus is on four core areas of software engineering as of now :\n</p>\n<ul>\n<li>Programming and software development in Java, C and C++</li>\n<li>Web technologies and web application development</li>\n<li>Database management and administration</li>\n<li>Network administration and security</li>\n</ul>\n</>\n  },\n\n\n  \"skills\" : {\n    \"name\" : \"Skills\", \n    \"content\" : \n<>\n<p>\n•\tComputer languages: Java, C#, JavaScript, TypeScript, PHP, PL/SQL, SQL, Bash, XML, HTML, CSS, JSON\n</p>\n<p>\n•\tFamiliar IDEs: Visual Studio, Oracle SQL Developer, Android Studio, Unity, Netbeans\n</p>\n<p>\n•\tProficient in different coding languages, able to transfer skills between languages and adapt\n</p>\n<p>\n•\tOther skills: Angular, React, Bootstrap, ASP.NET, JSP, MySQL, SASS, Git, GitHub, UNIX, Linux, jQuery.\n</p>\n<p>\n•\tGood understanding of OOP Concepts , Data Structures and Algorithms . \n</p>\n<p>\n Facinated by Cloud Technologies I aquired training for <a rel=\"noreferrer\" target=\"_blank\" href=\"https://docdro.id/dcICF2v\">Cloud Practitioner</a> Fundamentals From AWS-Amazon. (On a path to become a certified AWS Solutions Architect) Also as a hobbyist gamer , I have tried developing Unity games (Earned Game Development Foundations <a rel=\"noreferrer\" target=\"_blank\" href=\"https://academy.zenva.com/certificate/ee54eabc\">Certificate</a> from Zenva Academy)\n</p>\n</>\n  },\n\n\n  \"contact\" : {\n    \"name\" : \"Contact\",\n    \"content\" : \n<>\n<p>I'm available to work on private or open-source projects</p>\n  <p>Fork/Open pull requests on my github project repositories (Some projects are still private and under development) or Shoot me an e-mail </p>\n  <p> 💻 <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/IDebugErrors\">Github</a></p>\n  <p> 📨 <a href=\"mailto:jaypatel@programmer.net\">Jaypatel@programmer.net </a></p>\n  <p> I will add Projects and Blogs section soon or (May be) I will develop a totally new portfolio as soon as I get a good front-end design idea. </p>\n  <p> PEACE </p>\n</>\n  }\n}\n\n\nexport default contentEN\n","\n\nvar contentEN = {\n    \"aboutme\" : {\n      \"name\" : \"About me\",\n      \"content\" : \n  <>\n  <p>\n  Hello 👋, I'm <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/IDebugErrors\">@JayPatel</a>,<br/>\n  Self Driven-Self Motivated Student Constantly Experimenting with new and old-school technologies. Areas of work : Software Engineering \\ Cloud Computing . I like to program, I like to research and implement software design techniques, learn how to structure projects, and how to write elegant code.\n  </p>\n  <p>\n  Moreover, I like to study programming languages, functional programming, clean code, and talk about AI, open-source, PC Hardware and tech in general. \n  </p>\n  <p>\n  I have developed personal projects in which I work with web apps, APIs, bots, and databases. I used concepts of functional programming, object-oriented programming, REST API, and image processing.\n  My main focus is on four core areas of software engineering as of now :\n  </p>\n  <ul>\n  <li>Programming and software development in Java, C and C++</li>\n  <li>Web technologies and web application development</li>\n  <li>Database management and administration</li>\n  <li>Network administration and security</li>\n  </ul>\n  </>\n    },\n  \n  \n    \"skills\" : {\n      \"name\" : \"Skills\", \n      \"content\" : \n  <>\n  <p>\n  •\tComputer languages: Java, C#, JavaScript, TypeScript, PHP, PL/SQL, SQL, Bash, XML, HTML, CSS, JSON\n  </p>\n  <p>\n  •\tFamiliar IDEs: Visual Studio, Oracle SQL Developer, Android Studio, Unity, Netbeans\n  </p>\n  <p>\n  •\tProficient in different coding languages, able to transfer skills between languages and adapt\n  </p>\n  <p>\n  •\tOther skills: Angular, React, Bootstrap, ASP.NET, JSP, MySQL, SASS, Git, GitHub, UNIX, Linux, jQuery.\n  </p>\n  <p>\n  •\tGood understanding of OOP Concepts , Data Structures and Algorithms . \n  </p>\n  <p>\n   Facinated by Cloud Technologies I aquired training for <a rel=\"noreferrer\" target=\"_blank\" href=\"https://docdro.id/dcICF2v\">Cloud Practitioner</a> Fundamentals From AWS-Amazon. (On a path to become a certified AWS Solutions Architect) Also as a hobbyist gamer , I have tried developing Unity games (Earned Game Development Foundations <a rel=\"noreferrer\" target=\"_blank\" href=\"https://academy.zenva.com/certificate/ee54eabc\">Certificate</a> from Zenva Academy)\n  </p>\n  </>\n    },\n  \n  \n    \"contact\" : {\n      \"name\" : \"Contact\",\n      \"content\" : \n  <>\n  <p>I'm available to work on private or open-source projects</p>\n  <p>Fork/Open pull requests on my github project repositories (Some projects are still private and under development) or Shoot me an e-mail </p>\n  <p> 💻 <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/IDebugErrors\">Github</a></p>\n  <p> 📨 <a href=\"mailto:jaypatel@programmer.net\">Jaypatel@programmer.net </a></p>\n  <p> I will add Projects and Blogs section soon or (May be) I will develop a totally new portfolio as soon as I get a good front-end design Idea. </p>\n  <p> PEACE </p>\n  </>\n    }\n  }\n  \n  \n  export default contentEN\n  //jaypatel (jaypatel@programmer.net)\n  //jaypatel (jaypatel@programmer.net)\n  //jaypatel (jaypatel@programmer.net)\n  //jaypatel (jaypatel@programmer.net)\n  //jaypatel (jaypatel@programmer.net)\n  //jaypatel (jaypatel@programmer.net)","import {supportedLanguages} from '../../text/textManager.js'\nimport './Languages.css'\n\n\nconst convertLanguageInStringToElement = language => (\n  <a \n    className=\"language\"\n    key={language}\n    href={\"?language=\" + language}\n  >\n    {language}\n  </a>\n)\n\n\nconst Languages = () => {\n  let allLanguagesComponent = (\n    supportedLanguages.map(convertLanguageInStringToElement)\n  )\n\n\n  return (\n    <div className=\"languages\">\n      {allLanguagesComponent}\n    </div>\n  )\n}\n\n\nexport default Languages\n","\n\nvar ButtonStates = {\n  \"isHide\" : true,\n  \"textColorsSelected\" : 0,\n  \"backgroundColorsSelected\" : 0,\n  \"textColors\" : [\"#0f0\", \"red\", \"yellow\"],\n  \"backgroundColors\" : \n    [\"rgba(0, 0, 0, 90%)\", \n     \"rgba(0, 0, 0, 60%)\", \n     \"rgba(255, 255, 255, 90%)\"\n    ]\n}\n\n\nconst getNextElement = (list, index) => {\n  let length = list.length\n  if (index + 1 === length) {\n      return [list[0], 0]\n  }\n  return [list[index + 1], index + 1]\n}\n\n\nconst nextBackgroundColors = colorObj => {\n  let [nextElement, nextIndex] = getNextElement(\n    colorObj[\"backgroundColors\"],\n    colorObj[\"backgroundColorsSelected\"])\n  colorObj[\"backgroundColorsSelected\"] = nextIndex\n  return nextElement\n}\n\n\nconst nextTextColors = colorObj => {\n  let [nextElement, nextIndex] = getNextElement(\n    colorObj[\"textColors\"],\n    colorObj[\"textColorsSelected\"])\n  colorObj[\"textColorsSelected\"] = nextIndex\n  return nextElement\n}\n\n\nconst addDisplayPropertyToElement = (element, property) =>\n  element.style.display = property\n\n\nconst changeTextColor = element => \n  element.style.color = nextTextColors(ButtonStates)\n\n\nconst changeBackgroundColors = element => \n  element.style.backgroundColor = nextBackgroundColors(ButtonStates)\n\n\nconst hideOrShowElement = element => {\n  if (ButtonStates[\"isHide\"]) {\n    addDisplayPropertyToElement(element, \"inline\")\n  } else {\n    addDisplayPropertyToElement(element, \"none\")\n  }\n  ButtonStates[\"isHide\"] = ! ButtonStates[\"isHide\"]\n}\n\n\nexport {hideOrShowElement, changeTextColor, changeBackgroundColors}\n","import Languages from '../Languages/Languages.js'\nimport './TopBar.css'\nimport {\n  hideOrShowElement, \n  changeTextColor,\n  changeBackgroundColors\n  } from './buttonsFunction.js'\n\n\nfunction Button(props) {\n  let len = 12\n  let margin = len / 2\n  return (\n    <div \n      className=\"button\"\n      onClick={props.onClick}\n      style={{ \n        \"color\" : props.color,\n          \"backgroundColor\" : props.color,\n          \"width\"  : String(len) + \"px\",\n          \"height\" : String(len) + \"px\",\n          \"marginLeft\" : String(margin) + \"px\"\n      }}\n    >\n    </div>\n  )\n}\n\n\nfunction TopBar(props) {\n  let red    = \"#f00\"\n  let yellow = \"#ff0\"\n  let green  = \"#0f0\"\n\n\n  const redButtonFunction = () => hideOrShowElement(\n    document.querySelector(\"div.languages\")\n  )\n  const yellowButtonFunction = () => changeTextColor(\n    document.querySelector(\"div#terminalDialog\")\n  )\n  const greenButtonFunction = () => changeBackgroundColors(\n    document.querySelector(\"div#terminalDialog\")\n  )\n\n\n  return (\n    <div id=\"topBar\" >\n      <div className=\"buttons\">\n        <Languages/>\n        <Button onClick={redButtonFunction} color={red}/>\n        <Button onClick={yellowButtonFunction} color={yellow}/>\n        <Button onClick={greenButtonFunction} color={green}/>\n      </div>\n      <p id=\"title\" > {props.title} </p>\n    </div>\n  )\n}\n\n\nexport default TopBar\n","import React from 'react'\nimport './Cursor.css'\n\n\nclass Cursor extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state  = {\n      cursorChar : '█',\n      timeToUpdate   : 500,\n      cursorOnStatus : true,\n      opacity : 100\n    }\n  }\n\n\n  setCursorStatus = (is_on) => {\n    if (is_on) {\n      this.setState({\n        cursorOnStatus : true,\n        opacity : 100\n      })\n    } else {\n      this.setState({\n        cursorOnStatus : false,\n        opacity : 0\n      })\n    }\n  }\n\n\n  changeCursorState = () => {\n    this.setCursorStatus(!this.state.cursorOnStatus)\n  }\n\n\n  componentDidMount = () => {\n    this.interval = setInterval(() => {\n      this.changeCursorState() \n    }, this.state.timeToUpdate)\n  }\n\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval)\n  }\n\n\n  render() {\n    let opacity = String(this.state.opacity) + \"%\"\n    return (\n      <strong id=\"cursor\" style={{\"opacity\" : opacity}}>\n        {this.state.cursorChar}\n      </strong>\n    )\n  }\n}\n\n\nexport default Cursor\n","import React from 'react'\nimport Cursor from '../Cursor/Cursor.js';\nimport './TextTyped.css'\n\n\nclass TextTyped extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timeToWaitBetweenEachChar : props.totalTime / props.text.length,\n      textInsideTerminalText : '',\n      charsToBeShowed : props.text.split('')\n    }\n  }\n\n\n  checkIfLeftCharToBeShowed = () => {\n    return Boolean(String(this.state.charsToBeShowed) !== \"\")\n  }\n\n\n  showOneChar = () => {\n    let [head, ...tail] = this.state.charsToBeShowed\n    let newText = this.state.textInsideTerminalText + head\n    this.setState({\n      textInsideTerminalText : newText,\n      charsToBeShowed : tail\n    })\n  }\n\n\n  showACharIfIsMissingACharToBeShown = () => {\n    if (this.checkIfLeftCharToBeShowed()) {\n      this.showOneChar()\n    } else {\n      clearInterval(this.interval)\n    }\n  }\n\n\n  componentDidMount = () => {\n    this.interval = setInterval(\n      this.showACharIfIsMissingACharToBeShown, \n      this.state.timeToWaitBetweenEachChar\n    )\n  }\n\n\n  render() {\n    return (\n      <div className=\"textTyped\">\n        <p id=\"textTyped\">\n          {this.state.textInsideTerminalText}<Cursor/>\n        </p>\n      </div>\n    )\n  }\n}\n\n\nexport default TextTyped\n","import React from 'react'\nimport {getSectionNames, getSectionName} from '../../text/textManager.js'\nimport './SectionBar.css'\n\n\nclass SectionBar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      \"sections\" : <></>\n    }\n  }\n\n\n  componentDidMount = () => \n    window.addEventListener(\"load\", this.renderSection)\n\n\n  renderSection = () => {\n    let renderedSection = (\n      <> {getSectionNames().map(sectionName => \n        <a                                                                                           \n          className=\"sectionLinks\"\n          key={sectionName}\n          onClick={() => this.props.onClick(sectionName)}\n          href={\"#\" + sectionName}\n        >\n          {getSectionName(sectionName)}\n        </a>\n      )}</>\n    )\n\n\n    this.setState({\"sections\" : renderedSection})\n  }\n\n\n  render() {\n    return (\n      <p className=\"sections\">\n        {this.state.sections}\n      </p> \n    )\n  }\n}\n\n\nexport default SectionBar\n","import {isValidLanguage, changeLanguage} from '../text/textManager.js'\n\n\nconst getLanguageFromUrlQueryParam = () => {\n  let query = \"language\"\n  let urlParamsObject = new URLSearchParams(window.location.search)\n  return urlParamsObject.get(query)\n}\n\n\nconst getBrowserLanguage = () => {\n  let languageAndCountry = navigator.language\n  let language = languageAndCountry.split(\"-\")[0]\n  return language\n}\n\n\nconst setLanguageFromQueryParamOrBrowserLanguage = () => {\n  let languageFromUrl = getLanguageFromUrlQueryParam()\n  let languageFromBrowser = getBrowserLanguage()\n\n\n  if (isValidLanguage(languageFromUrl)) {\n    changeLanguage(languageFromUrl)\n  } else if (isValidLanguage(languageFromBrowser)) {\n    changeLanguage(languageFromBrowser)\n  }\n}\n\n\nexport {setLanguageFromQueryParamOrBrowserLanguage}\n","import React from 'react'\nimport TextTyped from '../TextTyped/TextTyped.js'\nimport SectionBar from '../SectionBar/SectionBar.js'\nimport {getSectionContent} from '../../text/textManager.js'\nimport {\n  setLanguageFromQueryParamOrBrowserLanguage\n} from '../../utils/languages.js'\nimport './TerminalOutput.css'\n\n\nclass TerminalOutput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timeToWaitTheCommadIsTyped : 1000,\n      section        : \"aboutme\",\n      promptString   : \"[Jay@ArchLinux]$ \",\n      sectionName    : \"\",\n      sectionContent : \"\",\n    }\n  }\n\n\n  componentDidMount = () => {\n    setLanguageFromQueryParamOrBrowserLanguage()\n    setTimeout(this.changeSection, 1000, this.state.section)\n  }\n\n\n  changeSection = section => {\n    let timeToWaitAfterTheCommandIsTyped = 100\n    this.updateSectionNameAndClearContent(section)\n    setTimeout(\n      this.updateSectionContent, \n      this.state.timeToWaitTheCommadIsTyped + timeToWaitAfterTheCommandIsTyped,\n      section,\n    ) \n  }\n\n\n  updateSectionNameAndClearContent = section => {\n    this.setState({\n      section : section,\n      sectionContent : \"\"\n    })\n    this.updateSectionName(section)\n  }\n\n\n  updateSectionName = section => {\n    let text = \"cat \" + section + \".txt\"\n    let time = this.state.timeToWaitTheCommadIsTyped / text.length\n\n\n    this.textTyped.setState({\n      timeToWaitBetweenEachChar : time,\n      textInsideTerminalText    : '',\n      charsToBeShowed           : text.split(\"\")\n    })\n    this.textTyped.componentDidMount()\n  }\n\n\n  updateSectionContent = section => {\n    this.setState({\n      sectionContent : getSectionContent(section)\n    })\n  }\n\n\n  render() {\n    return (\n      <>\n      <div className=\"outputDiv\">\n        <div className=\"promptDiv\">\n          <p id=\"promptText\">{this.state.promptString}</p>\n          <TextTyped \n            ref={ref => this.textTyped = ref} \n            totalTime={0} text={\"\"} \n          />\n        </div>\n        <div id=\"outputText\">\n          <br/>\n          {this.state.sectionContent}\n        </div>\n      </div>\n\n\n      <>\n        <SectionBar onClick={this.changeSection}/>\n      </>\n      </>\n    )\n  }\n}\n\n\nexport default TerminalOutput;\n","import turnDraggable from '../../utils/turnDraggable.js'\nimport TopBar from '../TopBar/TopBar.js'\nimport TerminalOutput from '../TerminalOutput/TerminalOutput.js'\nimport './Terminal.css'\n\n\nconst TerminalWindow = () => {\n  let title = \"Linux-Terminal\"\n  return (\n    <div id=\"terminalDialog\">\n      <div>\n        <TopBar title={title}/>\n      </div>\n      <div className=\"terminalScreen\">\n        <TerminalOutput/>\n      </div>\n    </div>\n  )\n}\n\n\nconst TerminalDraggable = turnDraggable(TerminalWindow, {\n  \"dialogId\" : \"terminalDialog\",\n  \"elementThatCaptureTheClick\" : \"topBar\",\n  \"centerElement\" : true\n})\n\n\nexport default TerminalDraggable\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TerminalWindow from './Components/Terminal/Terminal.js'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TerminalWindow/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}